{
 "kind": "discovery#restDescription",
 "etag": "\"MKGA2miAJpVGF7yQTQhsoDXpye8/a_uQ374jZLj1-JDWrV1nHcb5M8w\"",
 "discoveryVersion": "v1",
 "id": "itemendpoint:v1",
 "name": "itemendpoint",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "uet.com",
 "ownerName": "uet.com",
 "packagePath": "mhst",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://transportsocial2014.appspot.com/_ah/api/itemendpoint/v1/",
 "basePath": "/_ah/api/itemendpoint/v1/",
 "rootUrl": "https://transportsocial2014.appspot.com/_ah/api/",
 "servicePath": "itemendpoint/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/userinfo.email": {
     "description": "View your email address"
    },
    "https://www.googleapis.com/auth/userinfo.profile": {
     "description": "View your basic profile info"
    }
   }
  }
 },
 "schemas": {
  "CollectionResponse_Item": {
   "id": "CollectionResponse_Item",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Item"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "Comment": {
   "id": "Comment",
   "type": "object",
   "properties": {
    "content": {
     "type": "string"
    },
    "id": {
     "$ref": "Key"
    },
    "idfb": {
     "type": "string"
    },
    "item": {
     "$ref": "Item"
    },
    "latitude": {
     "type": "number",
     "format": "double"
    },
    "longitude": {
     "type": "number",
     "format": "double"
    },
    "time": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "Item": {
   "id": "Item",
   "type": "object",
   "properties": {
    "address": {
     "type": "string"
    },
    "comment": {
     "type": "array",
     "items": {
      "$ref": "Comment"
     }
    },
    "content": {
     "type": "string"
    },
    "id": {
     "$ref": "Key"
    },
    "idFB": {
     "type": "string"
    },
    "latitude": {
     "type": "number",
     "format": "double"
    },
    "longitude": {
     "type": "number",
     "format": "double"
    },
    "status": {
     "type": "integer",
     "format": "int32"
    },
    "time": {
     "type": "string",
     "format": "date-time"
    },
    "vote": {
     "type": "array",
     "items": {
      "$ref": "Vote"
     }
    }
   }
  },
  "Key": {
   "id": "Key",
   "type": "object",
   "properties": {
    "appId": {
     "type": "string"
    },
    "complete": {
     "type": "boolean"
    },
    "id": {
     "type": "string",
     "format": "int64"
    },
    "kind": {
     "type": "string"
    },
    "name": {
     "type": "string"
    },
    "namespace": {
     "type": "string"
    },
    "parent": {
     "$ref": "Key"
    }
   }
  },
  "Vote": {
   "id": "Vote",
   "type": "object",
   "properties": {
    "id": {
     "$ref": "Key"
    },
    "idfb": {
     "type": "string"
    },
    "item": {
     "$ref": "Item"
    },
    "up": {
     "type": "boolean"
    }
   }
  }
 },
 "methods": {
  "comment": {
   "id": "itemendpoint.comment",
   "path": "comment/{idstt}",
   "httpMethod": "POST",
   "parameters": {
    "idstt": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "idstt"
   ],
   "request": {
    "$ref": "Comment",
    "parameterName": "resource"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "getItem": {
   "id": "itemendpoint.getItem",
   "path": "item/{id}",
   "httpMethod": "GET",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "response": {
    "$ref": "Item"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "insertItem": {
   "id": "itemendpoint.insertItem",
   "path": "item",
   "httpMethod": "POST",
   "request": {
    "$ref": "Item",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "Item"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email",
    "https://www.googleapis.com/auth/userinfo.profile"
   ]
  },
  "listItem": {
   "id": "itemendpoint.listItem",
   "path": "item",
   "httpMethod": "GET",
   "parameters": {
    "cursor": {
     "type": "string",
     "location": "query"
    },
    "distance": {
     "type": "number",
     "format": "double",
     "location": "query"
    },
    "lat": {
     "type": "number",
     "format": "double",
     "location": "query"
    },
    "limit": {
     "type": "integer",
     "format": "int32",
     "location": "query"
    },
    "lon": {
     "type": "number",
     "format": "double",
     "location": "query"
    },
    "timeAfter": {
     "type": "string",
     "format": "date-time",
     "location": "query"
    },
    "timeBefore": {
     "type": "string",
     "format": "date-time",
     "location": "query"
    }
   },
   "response": {
    "$ref": "CollectionResponse_Item"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  },
  "vote": {
   "id": "itemendpoint.vote",
   "path": "vote/{idstt}",
   "httpMethod": "POST",
   "parameters": {
    "idstt": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "idstt"
   ],
   "request": {
    "$ref": "Vote",
    "parameterName": "resource"
   },
   "scopes": [
    "https://www.googleapis.com/auth/userinfo.email"
   ]
  }
 },
 "resources": {
  "itemEndpoint": {
   "methods": {
    "removeItem": {
     "id": "itemendpoint.itemEndpoint.removeItem",
     "path": "item/{id}",
     "httpMethod": "DELETE",
     "parameters": {
      "id": {
       "type": "string",
       "required": true,
       "format": "int64",
       "location": "path"
      }
     },
     "parameterOrder": [
      "id"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ]
    },
    "updateItem": {
     "id": "itemendpoint.itemEndpoint.updateItem",
     "path": "item",
     "httpMethod": "PUT",
     "request": {
      "$ref": "Item",
      "parameterName": "resource"
     },
     "response": {
      "$ref": "Item"
     },
     "scopes": [
      "https://www.googleapis.com/auth/userinfo.email"
     ]
    }
   }
  }
 }
}
